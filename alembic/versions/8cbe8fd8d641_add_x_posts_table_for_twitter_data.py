"""Add x_posts table for Twitter data

Revision ID: 8cbe8fd8d641
Revises: 8fddc08f2d68
Create Date: 2025-05-29 08:29:35.361666

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8cbe8fd8d641'
down_revision: Union[str, None] = '8fddc08f2d68'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('x_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.String(length=50), nullable=False),
    sa.Column('author_handle', sa.String(length=100), nullable=False),
    sa.Column('author_name', sa.Text(), nullable=True),
    sa.Column('author_verified', sa.Boolean(), nullable=True),
    sa.Column('author_followers', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('posted_at', sa.DateTime(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('retweets', sa.Integer(), nullable=True),
    sa.Column('replies', sa.Integer(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('thread_id', sa.String(length=50), nullable=True),
    sa.Column('is_thread_starter', sa.Boolean(), nullable=True),
    sa.Column('reply_to_id', sa.String(length=50), nullable=True),
    sa.Column('mentioned_urls', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('mentioned_users', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hashtags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('arxiv_refs', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('is_viral', sa.Boolean(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('paper_refs_extracted', sa.Boolean(), nullable=True),
    sa.Column('scraped_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_xposts_arxiv_refs', 'x_posts', ['arxiv_refs'], unique=False, postgresql_using='gin')
    op.create_index('idx_xposts_author_date', 'x_posts', ['author_handle', 'posted_at'], unique=False)
    op.create_index('idx_xposts_engagement', 'x_posts', ['likes', 'retweets'], unique=False)
    op.create_index('idx_xposts_posted_relevance', 'x_posts', ['posted_at', 'relevance_score'], unique=False)
    op.create_index(op.f('ix_x_posts_author_handle'), 'x_posts', ['author_handle'], unique=False)
    op.create_index(op.f('ix_x_posts_post_id'), 'x_posts', ['post_id'], unique=True)
    op.create_index(op.f('ix_x_posts_posted_at'), 'x_posts', ['posted_at'], unique=False)
    op.create_index(op.f('ix_x_posts_processed'), 'x_posts', ['processed'], unique=False)
    op.create_index(op.f('ix_x_posts_relevance_score'), 'x_posts', ['relevance_score'], unique=False)
    op.create_index(op.f('ix_x_posts_thread_id'), 'x_posts', ['thread_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_x_posts_thread_id'), table_name='x_posts')
    op.drop_index(op.f('ix_x_posts_relevance_score'), table_name='x_posts')
    op.drop_index(op.f('ix_x_posts_processed'), table_name='x_posts')
    op.drop_index(op.f('ix_x_posts_posted_at'), table_name='x_posts')
    op.drop_index(op.f('ix_x_posts_post_id'), table_name='x_posts')
    op.drop_index(op.f('ix_x_posts_author_handle'), table_name='x_posts')
    op.drop_index('idx_xposts_posted_relevance', table_name='x_posts')
    op.drop_index('idx_xposts_engagement', table_name='x_posts')
    op.drop_index('idx_xposts_author_date', table_name='x_posts')
    op.drop_index('idx_xposts_arxiv_refs', table_name='x_posts', postgresql_using='gin')
    op.drop_table('x_posts')
    # ### end Alembic commands ###
